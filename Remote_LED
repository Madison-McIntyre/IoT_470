#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClientSecure.h>

// Network credentials
const char* ssid = "Wifi Username";           // WiFi SSID
const char* password = "WiFi Password";              // WiFi Password

// Define the pin for the LED
const int ledPin = D1;  // Change as needed

void setup() {
  pinMode(ledPin, OUTPUT);  // Set the LED pin as an output
  digitalWrite(ledPin, LOW); // Initialize the LED to off

  Serial.begin(9600);
  WiFi.begin(ssid, password);  // Connect to WiFi

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  Serial.println("Connected to WiFi!");
  delay(1000); // Short delay after connection
}

void loop() {
  // Check the command from the remote URL
  if (WiFi.status() == WL_CONNECTED) {
    WiFiClientSecure client;
    client.setInsecure();  // Disable certificate verification (not recommended for production)
    
    HTTPClient http;  // Create an HTTP client

    // Specify the URL to check
    http.begin(client, "https://shop.moondancegolf.com/tp.txt");  
    int httpCode = http.GET();  // Make the request

    if (httpCode > 0) { // Check for the returning code
      String payload = http.getString();  // Get the response payload
      Serial.println(payload);  // Print the payload for debugging

      // Control the LED based on the payload
      if (payload.indexOf("on") != -1) {
        digitalWrite(ledPin, HIGH); // Turn the LED on
        Serial.println("LED is ON");
      } else if (payload.indexOf("off") != -1) {
        digitalWrite(ledPin, LOW); // Turn the LED off
        Serial.println("LED is OFF");
      }
    } else {
      Serial.printf("HTTP Error: %s\n", http.errorToString(httpCode).c_str());
    }
    http.end();  // Close the connection
  } else {
    Serial.println("WiFi not connected. Retrying...");
  }

  delay(3000);  // Wait for 3 seconds before checking again
}
